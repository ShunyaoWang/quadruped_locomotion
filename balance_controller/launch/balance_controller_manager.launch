<?xml version="1.0"?>
<launch>

  <arg name="kinect_enabled" default="true"/>
  <arg name="robot_namespace" default="/"/>

  <param name="robot_description" command="$(find xacro)/xacro '$(find simpledog)/urdf/quadruped_model.urdf.xacro'
  --inorder
  robot_namespace:=$(arg robot_namespace)
  kinect_enabled:=$(arg kinect_enabled)"/>

  <param name="/free_gait/robot_state" value="/legodom/robot_states" />
  <!--<param name="robot_description" textfile="$(find simpledog)/urdf/simpledog.urdf.xacro"/>-->

  <!--<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />-->

  <!-- <include file="$(find pressure_sensor)/launch/pressure_sensor.launch">

  </include> -->

  <!-- <param name="/use_gazebo_feedback" value="false"/> -->

  <param name="/legodom/use_gazebo_feedback" value="false"/>

  <param name="/real_time_factor" value="1" />
  <param name="/cal_fator_x" value="1.0" />
  <param name="/cal_fator_y" value="1.0" />
  <param name="/cal_fator_z" value="1.0" />

<!-- Load controller configuration -->

<include file="$(find xsens_driver)/launch/xsens_driver.launch">

</include>
<!-- <remap from="/imu/data" to="/imu" /> -->
<param name="/imu_topic_name" value="/imu/data" />

<rosparam command="load" file="$(find balance_controller)/config/control.yaml" />

<rosparam command="load" file="$(find ros_ethercat_driver)/config/motor_param.yaml" />
<!-- <rosparam command="load" file="$(find simpledog)/config/joint_names_simpleDog.yaml" /> -->
<!-- Spawn controllers -->
<node name="base_controller_spawner" pkg="controller_manager" type="spawner"
      args="simpledog_joint_publisher
            all_joints_position_group_controller
            state_estimate_update" />
            <!-- front_left_1_joint_position_controller
            front_left_2_joint_position_controller
            front_left_3_joint_position_controller
            front_right_1_joint_position_controller
            front_right_2_joint_position_controller
            front_right_3_joint_position_controller
            rear_right_1_joint_position_controller
            rear_right_2_joint_position_controller
            rear_right_3_joint_position_controller
            rear_left_1_joint_position_controller
            rear_left_2_joint_position_controller
            rear_left_3_joint_position_controller"/> -->
<rosparam file="$(find balance_controller)/config/controller_gains.yaml" command="load" />
<node name="base_controller_spawner_stopped" pkg="controller_manager" type="spawner"
      args="--stopped single_leg_controller
              base_balance_controller
              all_joints_velocity_group_controller
              all_joints_effort_group_controller" />

<node name="controller_manager" pkg="balance_controller" type="balance_controller_manager" args="" output="screen" respawn="false">
  <param name="/ethercat_card_name" value="eno1" type="str"/>
  <param name="/slave_type" value="Twitter" type="str"/>
  <param name="/pdo_type" value="PDOA" type="str"/>
  <!-- <param name="/slave_type" value="GoldenTwitter" type="str"/>
  <param name="/pdo_type" value="PDOA" type="str"/> -->
</node>
<!--get joint states and pub the robot tf-->
<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
  <param name="publish_frequency" type="double" value="50.0" />
  <param name="ignore_timestamp" type="bool" value="false" />
</node>

<!-- Spawn robot in gazebo (the world file has already include the robot)-->
<!--<node name="spawn_simpledog_model" pkg="gazebo_ros" type="spawn_model"
    args="-x $(arg x)
    -y $(arg y)
    -z $(arg z)
    -Y $(arg yaw)
    -unpause
    -urdf
    -param robot_description
    -model $(arg robot_namespace)" />-->
</launch>
